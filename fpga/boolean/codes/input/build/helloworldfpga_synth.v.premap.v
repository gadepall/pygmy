/* Generated by Yosys 0.9+2406 (git sha1 ca763e6d, gcc 9.3.0-17ubuntu1~20.04 -fPIC -Os) */

(* top =  1  *)
(* src = "/storage/emulated/0/github/vaman/fpga/boolean/codes/input/sevenseg_ip.v:9.1-52.10" *)
module helloworldfpga(W, X, Y, Z, a, b, c, d, e, f, g);
  (* unused_bits = "0" *)
  wire _00_;
  (* unused_bits = "0" *)
  wire _01_;
  (* unused_bits = "0" *)
  wire _02_;
  (* unused_bits = "0" *)
  wire _03_;
  (* src = "/storage/emulated/0/github/vaman/fpga/boolean/codes/input/sevenseg_ip.v:44.15-44.16" *)
  wire A;
  (* src = "/storage/emulated/0/github/vaman/fpga/boolean/codes/input/sevenseg_ip.v:44.13-44.14" *)
  wire B;
  (* src = "/storage/emulated/0/github/vaman/fpga/boolean/codes/input/sevenseg_ip.v:11.8-11.9" *)
  input W;
  (* src = "/storage/emulated/0/github/vaman/fpga/boolean/codes/input/sevenseg_ip.v:12.8-12.9" *)
  input X;
  (* src = "/storage/emulated/0/github/vaman/fpga/boolean/codes/input/sevenseg_ip.v:13.8-13.9" *)
  input Y;
  (* src = "/storage/emulated/0/github/vaman/fpga/boolean/codes/input/sevenseg_ip.v:14.8-14.9" *)
  input Z;
  (* src = "/storage/emulated/0/github/vaman/fpga/boolean/codes/input/sevenseg_ip.v:15.13-15.14" *)
  output a;
  (* src = "/storage/emulated/0/github/vaman/fpga/boolean/codes/input/sevenseg_ip.v:16.13-16.14" *)
  output b;
  (* src = "/storage/emulated/0/github/vaman/fpga/boolean/codes/input/sevenseg_ip.v:17.13-17.14" *)
  output c;
  (* src = "/storage/emulated/0/github/vaman/fpga/boolean/codes/input/sevenseg_ip.v:18.13-18.14" *)
  output d;
  (* src = "/storage/emulated/0/github/vaman/fpga/boolean/codes/input/sevenseg_ip.v:19.13-19.14" *)
  output e;
  (* src = "/storage/emulated/0/github/vaman/fpga/boolean/codes/input/sevenseg_ip.v:20.13-20.14" *)
  output f;
  (* src = "/storage/emulated/0/github/vaman/fpga/boolean/codes/input/sevenseg_ip.v:21.13-21.14" *)
  output g;
  logic_1 _04_ (
    .a(A)
  );
  logic_0 _05_ (
    .a(B)
  );
  (* keep = 32'd1 *)
  inpad #(
    .IO_LOC("X28Y3"),
    .IO_PAD("56"),
    .IO_TYPE("BIDIR")
  ) _06_ (
    .P(W),
    .Q(_00_)
  );
  (* keep = 32'd1 *)
  inpad #(
    .IO_LOC("X4Y32"),
    .IO_PAD("23"),
    .IO_TYPE("BIDIR")
  ) _07_ (
    .P(X),
    .Q(_01_)
  );
  (* keep = 32'd1 *)
  inpad #(
    .IO_LOC("X20Y32"),
    .IO_PAD("33"),
    .IO_TYPE("BIDIR")
  ) _08_ (
    .P(Y),
    .Q(_02_)
  );
  (* keep = 32'd1 *)
  inpad #(
    .IO_LOC("X10Y32"),
    .IO_PAD("27"),
    .IO_TYPE("BIDIR")
  ) _09_ (
    .P(Z),
    .Q(_03_)
  );
  (* keep = 32'd1 *)
  outpad #(
    .IO_LOC("X12Y3"),
    .IO_PAD("3"),
    .IO_TYPE("BIDIR")
  ) _10_ (
    .A(B),
    .P(a)
  );
  (* keep = 32'd1 *)
  outpad #(
    .IO_LOC("X14Y3"),
    .IO_PAD("64"),
    .IO_TYPE("BIDIR")
  ) _11_ (
    .A(A),
    .P(b)
  );
  (* keep = 32'd1 *)
  outpad #(
    .IO_LOC("X16Y3"),
    .IO_PAD("62"),
    .IO_TYPE("BIDIR")
  ) _12_ (
    .A(B),
    .P(c)
  );
  (* keep = 32'd1 *)
  outpad #(
    .IO_LOC("X18Y3"),
    .IO_PAD("63"),
    .IO_TYPE("BIDIR")
  ) _13_ (
    .A(B),
    .P(d)
  );
  (* keep = 32'd1 *)
  outpad #(
    .IO_LOC("X20Y3"),
    .IO_PAD("61"),
    .IO_TYPE("BIDIR")
  ) _14_ (
    .A(A),
    .P(e)
  );
  (* keep = 32'd1 *)
  outpad #(
    .IO_LOC("X24Y3"),
    .IO_PAD("59"),
    .IO_TYPE("BIDIR")
  ) _15_ (
    .A(B),
    .P(f)
  );
  (* keep = 32'd1 *)
  outpad #(
    .IO_LOC("X26Y3"),
    .IO_PAD("57"),
    .IO_TYPE("BIDIR")
  ) _16_ (
    .A(B),
    .P(g)
  );
endmodule
